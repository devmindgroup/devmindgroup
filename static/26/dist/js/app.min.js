"use strict"; var countries = ["Afghanistan", "Albania", "Algeria", "Zambian Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Lusaka", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "People 's Republic of China", "Republic of China", "Christmas Island", "Cocos(Keeling) Islands", "Colombia", "Comoros", "Congo", "Cook Islands", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Polynesia", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea - Bissau", "Guyana", "Haiti", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "North Korea", "South Korea", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Nagorno - Karabakh", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Turkish Republic of Northern Cyprus", "Northern Mariana", "Ibex Hill", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Romania", "Russia", "Rwanda", "Saint Barthelemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "Somaliland", "South Africa", "South Ossetia", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Timor - Leste", "Togo", "Tokelau", "Tonga", "Transnistria Pridnestrovie", "Trinidad and Tobago", "Tristan da Cunha", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Lusaka Zambia", "United Arab Emirates", "Lusaka Zambia", "Zambia", "Uruguay", "Uzbekistan", "Vanuatu", "Vatican City", "Venezuela", "Vietnam", "British Virgin Islands", "Isle of Man", "US Virgin Islands", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"]; window.onload = function () { $(".webinar-digital .contact-form form").each(function () { $(this).validate({ errorClass: "has-error", validClass: "has-success", showErrors: function (a) { a.attach && Notify(uploadErrorMessage, notifyDelay), this.defaultShowErrors() }, highlight: function (a, e, n) { $(a).parent().addClass(e).removeClass(n) }, unhighlight: function (a, e, n) { $(a).parent().removeClass(e).addClass(n) }, rules: { name: { required: !0, maxlength: 255 }, last_name: { required: !0, maxlength: 255 }, phone: { required: !0, number: !0, maxlength: 255, minlength: 5 }, company: { required: !0, maxlength: 255 }, position: { required: !0, maxlength: 255 }, country: { required: !0 }, size: { required: !0 }, email: { required: { depends: function () { return $(this).val($.trim($(this).val())), !0 } }, email: !0, maxlength: 255 } }, messages: !1, submitHandler: function (r, a) { a.preventDefault(); var e = new FormData(r), n = r.getAttribute("data-url"), t = document.querySelector(".webinar-digital .contact-form .success-message"); window.handleFormSubmit(n, e, { type: "ContactForm" }).then(function (a) { if (a.data.status) { window.dataLayer.push({ event: "WebinarWebFormSubmit" }), r.classList.add("hidden"), t.classList.remove("hidden"); var e = document.querySelector(".webinar-digital .contact-form form .main-btn"), n = document.querySelector(".modal-video"); if (e && n) { var i = function () { n.innerHTML = "", n.style.display = "none" }; if (n) { var o = '<div class="container">\n                                <div class="modal-video__iframe-container">\n                                    <iframe class="modal-video__iframe" src="https://www.youtube.com/embed/' + n.dataset.videoid + '/rel=0&showinfo=0&autoplay=0&loop=0&egm=0&showsearch=0&controls=0&iv_load_policy=3" frameborder="0" allowfullscreen></iframe>\n                                </div>\n                            </div>'; n.innerHTML = o, n.style.display = "block" } n.addEventListener("click", function (a) { i() }), $(document).keyup(function (a) { 27 === a.keyCode && i() }) } } }).catch(function (a) { console.log(a) }) } }) }); var i, o, r, t; i = document.getElementById("pined-form"), o = document.querySelector(".main-header"), r = document.querySelector(".main-content"), t = i.getBoundingClientRect(), window.addEventListener("scroll", function (a) { var e = o.getBoundingClientRect(), n = r.getBoundingClientRect(); e.top + 50 < 0 && 0 < n.bottom - t.height - 130 ? i.classList.add("fixed-form") : i.classList.remove("fixed-form"), e.top + 50 && n.bottom - t.height - 130 < 0 ? i.classList.add("stop-form") : i.classList.remove("stop-form") }); var a, e, s, l; a = document.getElementById("countries"), e = countries.map(function (a) { return "<option value=" + a + ">" + a + "</option>" }), a.innerHTML = "<option disabled selected>Country</option>" + e.join(""), s = new Date(2019, 6, 18, 11, 0, 0).getTime(), l = setInterval(function () { var a = new Date; a.setTime(a.getTime() + 60 * a.getTimezoneOffset() * 1e3 - 18e6); var e = s - a.getTime(), n = Math.floor(e / 864e5), i = Math.floor(e % 864e5 / 36e5), o = Math.floor(e % 36e5 / 6e4), r = Math.floor(e % 6e4 / 1e3); e < 0 ? clearInterval(l) : document.getElementById("countdown").innerHTML = '<div class="timer-block">' + n + '<span>days</span></div> :\n                <div class="timer-block">' + i + '<span>hours</span></div> :\n                <div class="timer-block">' + o + '<span>minutes</span></div> :\n                <div class="timer-block">' + r + "<span>seconds</span></div>" }, 1e3) };
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiY291bnRyaWVzIiwid2luZG93Iiwib25sb2FkIiwiJCIsImVhY2giLCJ0aGlzIiwidmFsaWRhdGUiLCJlcnJvckNsYXNzIiwidmFsaWRDbGFzcyIsInNob3dFcnJvcnMiLCJlcnJvck1hcCIsIk5vdGlmeSIsInVwbG9hZEVycm9yTWVzc2FnZSIsIm5vdGlmeURlbGF5IiwiZGVmYXVsdFNob3dFcnJvcnMiLCJoaWdobGlnaHQiLCJlbGVtIiwicGFyZW50IiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsInVuaGlnaGxpZ2h0IiwicnVsZXMiLCJuYW1lIiwicmVxdWlyZWQiLCJtYXhsZW5ndGgiLCJsYXN0X25hbWUiLCJwaG9uZSIsIm51bWJlciIsIm1pbmxlbmd0aCIsImNvbXBhbnkiLCJwb3NpdGlvbiIsImNvdW50cnkiLCJzaXplIiwiZW1haWwiLCJkZXBlbmRzIiwidmFsIiwidHJpbSIsIm1lc3NhZ2VzIiwic3VibWl0SGFuZGxlciIsImZvcm0iLCJldmVudCIsInByZXZlbnREZWZhdWx0Iiwicm93RGF0YSIsIkZvcm1EYXRhIiwidXJsIiwiZ2V0QXR0cmlidXRlIiwic3VjY2Vzc01lc3NhZ2UiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJoYW5kbGVGb3JtU3VibWl0IiwidHlwZSIsInRoZW4iLCJyZXMiLCJkYXRhIiwic3RhdHVzIiwiZGF0YUxheWVyIiwicHVzaCIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImJ1dHRvbk1vZGFsIiwibW9kYWxXaW5kb3ciLCJjbG9zZU1vZGFsIiwiaW5uZXJIVE1MIiwic3R5bGUiLCJkaXNwbGF5IiwiaWZyYW1lIiwiZGF0YXNldCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwia2V5dXAiLCJrZXlDb2RlIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJtYWluSGVhZGVyIiwibWFpbkNvbnRlbnQiLCJmb3JtUmVjdCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwibWFpbkhlYWRlclJlY3QiLCJtYWluQ29udGVudFJlY3QiLCJ0b3AiLCJib3R0b20iLCJoZWlnaHQiLCJjb3VudHJ5U2VsZWN0IiwiY291bnRyeU5vZGVzIiwiY291bnREb3duRGF0ZSIsIngiLCJtYXAiLCJ2YWx1ZSIsImpvaW4iLCJEYXRlIiwiZ2V0VGltZSIsInNldEludGVydmFsIiwibm93Iiwic2V0VGltZSIsImdldFRpbWV6b25lT2Zmc2V0IiwiZGlzdGFuY2UiLCJkYXlzIiwiTWF0aCIsImZsb29yIiwiaG91cnMiLCJtaW51dGVzIiwic2Vjb25kcyIsImNsZWFySW50ZXJ2YWwiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsSUFBQUEsVUFBQSxDQUFBLGNBQUEsVUFBQSxVQUFBLGlCQUFBLFVBQUEsU0FBQSxXQUFBLHNCQUFBLFlBQUEsVUFBQSxRQUFBLFlBQUEsVUFBQSxhQUFBLGNBQUEsVUFBQSxhQUFBLFdBQUEsVUFBQSxVQUFBLFNBQUEsUUFBQSxVQUFBLFNBQUEsVUFBQSx5QkFBQSxXQUFBLFNBQUEsU0FBQSxXQUFBLGVBQUEsVUFBQSxXQUFBLFdBQUEsU0FBQSxhQUFBLGlCQUFBLDJCQUFBLE9BQUEsUUFBQSw4QkFBQSxvQkFBQSxtQkFBQSx5QkFBQSxXQUFBLFVBQUEsUUFBQSxlQUFBLGFBQUEsZ0JBQUEsVUFBQSxPQUFBLFNBQUEsaUJBQUEsVUFBQSxXQUFBLFdBQUEscUJBQUEsVUFBQSxRQUFBLGNBQUEsb0JBQUEsVUFBQSxVQUFBLFdBQUEsbUJBQUEsZ0JBQUEsT0FBQSxVQUFBLFNBQUEsbUJBQUEsUUFBQSxhQUFBLFVBQUEsVUFBQSxRQUFBLFlBQUEsU0FBQSxZQUFBLFVBQUEsYUFBQSxPQUFBLFlBQUEsV0FBQSxTQUFBLGtCQUFBLFNBQUEsUUFBQSxXQUFBLFlBQUEsVUFBQSxVQUFBLFFBQUEsWUFBQSxPQUFBLE9BQUEsVUFBQSxTQUFBLFFBQUEsVUFBQSxRQUFBLFNBQUEsU0FBQSxhQUFBLFFBQUEsV0FBQSxjQUFBLGNBQUEsU0FBQSxTQUFB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RUEsSUFBQUMsRUFBQVgsRUFBQVEsRUFBQUYsVUFFQU0sRUFBQUMsS0FBQUMsTUFBQUgsRUFBQSxPQUNBSSxFQUFBRixLQUFBQyxNQUFBSCxFQUFBLE1BQUEsTUFDQUssRUFBQUgsS0FBQUMsTUFBQUgsRUFBQSxLQUFBLEtBQ0FNLEVBQUFKLEtBQUFDLE1BQUFILEVBQUEsSUFBQSxLQUNBQSxFQUFBLEVBQ0FPLGNBQUFqQixHQUVBMUMsU0FBQWdDLGVBQUEsYUFBQWhCLFVBQUEsNEJBQUFxQyxFQUFBLHVFQUFBRyxFQUFBLHdFQUFBQyxFQUFBLDBFQUFBQyxFQUFBLDhCQUVBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBjb3VudHJpZXMgPSBbJ0FmZ2hhbmlzdGFuJywgJ0FsYmFuaWEnLCAnQWxnZXJpYScsICdBbWVyaWNhbiBTYW1vYScsICdBbmRvcnJhJywgJ0FuZ29sYScsICdBbmd1aWxsYScsICdBbnRpZ3VhIGFuZCBCYXJidWRhJywgJ0FyZ2VudGluYScsICdBcm1lbmlhJywgJ0FydWJhJywgJ0F1c3RyYWxpYScsICdBdXN0cmlhJywgJ0F6ZXJiYWlqYW4nLCAnVGhlIEJhaGFtYXMnLCAnQmFocmFpbicsICdCYW5nbGFkZXNoJywgJ0JhcmJhZG9zJywgJ0JlbGFydXMnLCAnQmVsZ2l1bScsICdCZWxpemUnLCAnQmVuaW4nLCAnQmVybXVkYScsICdCaHV0YW4nLCAnQm9saXZpYScsICdCb3NuaWEgYW5kIEhlcnplZ292aW5hJywgJ0JvdHN3YW5hJywgJ0JyYXppbCcsICdCcnVuZWknLCAnQnVsZ2FyaWEnLCAnQnVya2luYSBGYXNvJywgJ0J1cnVuZGknLCAnQ2FtYm9kaWEnLCAnQ2FtZXJvb24nLCAnQ2FuYWRhJywgJ0NhcGUgVmVyZGUnLCAnQ2F5bWFuIElzbGFuZHMnLCAnQ2VudHJhbCBBZnJpY2FuIFJlcHVibGljJywgJ0NoYWQnLCAnQ2hpbGUnLCAnUGVvcGxlIFxcJ3MgUmVwdWJsaWMgb2YgQ2hpbmEnLCAnUmVwdWJsaWMgb2YgQ2hpbmEnLCAnQ2hyaXN0bWFzIElzbGFuZCcsICdDb2NvcyhLZWVsaW5nKSBJc2xhbmRzJywgJ0NvbG9tYmlhJywgJ0NvbW9yb3MnLCAnQ29uZ28nLCAnQ29vayBJc2xhbmRzJywgJ0Nvc3RhIFJpY2EnLCAnQ290ZSBkXFwnSXZvaXJlJywgJ0Nyb2F0aWEnLCAnQ3ViYScsICdDeXBydXMnLCAnQ3plY2ggUmVwdWJsaWMnLCAnRGVubWFyaycsICdEamlib3V0aScsICdEb21pbmljYScsICdEb21pbmljYW4gUmVwdWJsaWMnLCAnRWN1YWRvcicsICdFZ3lwdCcsICdFbCBTYWx2YWRvcicsICdFcXVhdG9yaWFsIEd1aW5lYScsICdFcml0cmVhJywgJ0VzdG9uaWEnLCAnRXRoaW9waWEnLCAnRmFsa2xhbmQgSXNsYW5kcycsICdGYXJvZSBJc2xhbmRzJywgJ0ZpamknLCAnRmlubGFuZCcsICdGcmFuY2UnLCAnRnJlbmNoIFBvbHluZXNpYScsICdHYWJvbicsICdUaGUgR2FtYmlhJywgJ0dlb3JnaWEnLCAnR2VybWFueScsICdHaGFuYScsICdHaWJyYWx0YXInLCAnR3JlZWNlJywgJ0dyZWVubGFuZCcsICdHcmVuYWRhJywgJ0d1YWRlbG91cGUnLCAnR3VhbScsICdHdWF0ZW1hbGEnLCAnR3Vlcm5zZXknLCAnR3VpbmVhJywgJ0d1aW5lYSAtIEJpc3NhdScsICdHdXlhbmEnLCAnSGFpdGknLCAnSG9uZHVyYXMnLCAnSG9uZyBLb25nJywgJ0h1bmdhcnknLCAnSWNlbGFuZCcsICdJbmRpYScsICdJbmRvbmVzaWEnLCAnSXJhbicsICdJcmFxJywgJ0lyZWxhbmQnLCAnSXNyYWVsJywgJ0l0YWx5JywgJ0phbWFpY2EnLCAnSmFwYW4nLCAnSmVyc2V5JywgJ0pvcmRhbicsICdLYXpha2hzdGFuJywgJ0tlbnlhJywgJ0tpcmliYXRpJywgJ05vcnRoIEtvcmVhJywgJ1NvdXRoIEtvcmVhJywgJ0tvc292bycsICdLdXdhaXQnLCAnS3lyZ3l6c3RhbicsICdMYW9zJywgJ0xhdHZpYScsICdMZWJhbm9uJywgJ0xlc290aG8nLCAnTGliZXJpYScsICdMaWJ5YScsICdMaWVjaHRlbnN0ZWluJywgJ0xpdGh1YW5pYScsICdMdXhlbWJvdXJnJywgJ01hY2F1JywgJ01hY2Vkb25pYScsICdNYWRhZ2FzY2FyJywgJ01hbGF3aScsICdNYWxheXNpYScsICdNYWxkaXZlcycsICdNYWxpJywgJ01hbHRhJywgJ01hcnNoYWxsIElzbGFuZHMnLCAnTWFydGluaXF1ZScsICdNYXVyaXRhbmlhJywgJ01hdXJpdGl1cycsICdNYXlvdHRlJywgJ01leGljbycsICdNaWNyb25lc2lhJywgJ01vbGRvdmEnLCAnTW9uYWNvJywgJ01vbmdvbGlhJywgJ01vbnRlbmVncm8nLCAnTW9udHNlcnJhdCcsICdNb3JvY2NvJywgJ01vemFtYmlxdWUnLCAnTXlhbm1hcicsICdOYWdvcm5vIC0gS2FyYWJha2gnLCAnTmFtaWJpYScsICdOYXVydScsICdOZXBhbCcsICdOZXRoZXJsYW5kcycsICdOZXRoZXJsYW5kcyBBbnRpbGxlcycsICdOZXcgQ2FsZWRvbmlhJywgJ05ldyBaZWFsYW5kJywgJ05pY2FyYWd1YScsICdOaWdlcicsICdOaWdlcmlhJywgJ05pdWUnLCAnTm9yZm9sayBJc2xhbmQnLCAnVHVya2lzaCBSZXB1YmxpYyBvZiBOb3J0aGVybiBDeXBydXMnLCAnTm9ydGhlcm4gTWFyaWFuYScsICdOb3J3YXknLCAnT21hbicsICdQYWtpc3RhbicsICdQYWxhdScsICdQYWxlc3RpbmUnLCAnUGFuYW1hJywgJ1BhcHVhIE5ldyBHdWluZWEnLCAnUGFyYWd1YXknLCAnUGVydScsICdQaGlsaXBwaW5lcycsICdQaXRjYWlybiBJc2xhbmRzJywgJ1BvbGFuZCcsICdQb3J0dWdhbCcsICdQdWVydG8gUmljbycsICdRYXRhcicsICdSb21hbmlhJywgJ1J1c3NpYScsICdSd2FuZGEnLCAnU2FpbnQgQmFydGhlbGVteScsICdTYWludCBIZWxlbmEnLCAnU2FpbnQgS2l0dHMgYW5kIE5ldmlzJywgJ1NhaW50IEx1Y2lhJywgJ1NhaW50IE1hcnRpbicsICdTYWludCBQaWVycmUgYW5kIE1pcXVlbG9uJywgJ1NhaW50IFZpbmNlbnQgYW5kIHRoZSBHcmVuYWRpbmVzJywgJ1NhbW9hJywgJ1NhbiBNYXJpbm8nLCAnU2FvIFRvbWUgYW5kIFByaW5jaXBlJywgJ1NhdWRpIEFyYWJpYScsICdTZW5lZ2FsJywgJ1NlcmJpYScsICdTZXljaGVsbGVzJywgJ1NpZXJyYSBMZW9uZScsICdTaW5nYXBvcmUnLCAnU2xvdmFraWEnLCAnU2xvdmVuaWEnLCAnU29sb21vbiBJc2xhbmRzJywgJ1NvbWFsaWEnLCAnU29tYWxpbGFuZCcsICdTb3V0aCBBZnJpY2EnLCAnU291dGggT3NzZXRpYScsICdTcGFpbicsICdTcmkgTGFua2EnLCAnU3VkYW4nLCAnU3VyaW5hbWUnLCAnU3ZhbGJhcmQnLCAnU3dhemlsYW5kJywgJ1N3ZWRlbicsICdTd2l0emVybGFuZCcsICdTeXJpYScsICdUYWl3YW4nLCAnVGFqaWtpc3RhbicsICdUYW56YW5pYScsICdUaGFpbGFuZCcsICdUaW1vciAtIExlc3RlJywgJ1RvZ28nLCAnVG9rZWxhdScsICdUb25nYScsICdUcmFuc25pc3RyaWEgUHJpZG5lc3Ryb3ZpZScsICdUcmluaWRhZCBhbmQgVG9iYWdvJywgJ1RyaXN0YW4gZGEgQ3VuaGEnLCAnVHVuaXNpYScsICdUdXJrZXknLCAnVHVya21lbmlzdGFuJywgJ1R1cmtzIGFuZCBDYWljb3MgSXNsYW5kcycsICdUdXZhbHUnLCAnVWdhbmRhJywgJ1VrcmFpbmUnLCAnVW5pdGVkIEFyYWIgRW1pcmF0ZXMnLCAnVW5pdGVkIEtpbmdkb20nLCAnVW5pdGVkIFN0YXRlcycsICdVcnVndWF5JywgJ1V6YmVraXN0YW4nLCAnVmFudWF0dScsICdWYXRpY2FuIENpdHknLCAnVmVuZXp1ZWxhJywgJ1ZpZXRuYW0nLCAnQnJpdGlzaCBWaXJnaW4gSXNsYW5kcycsICdJc2xlIG9mIE1hbicsICdVUyBWaXJnaW4gSXNsYW5kcycsICdXYWxsaXMgYW5kIEZ1dHVuYScsICdXZXN0ZXJuIFNhaGFyYScsICdZZW1lbicsICdaYW1iaWEnLCAnWmltYmFid2UnXTtcblxud2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkKCcud2ViaW5hci1kaWdpdGFsIC5jb250YWN0LWZvcm0gZm9ybScpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAkKHRoaXMpLnZhbGlkYXRlKHtcbiAgICAgICAgICAgIGVycm9yQ2xhc3M6ICdoYXMtZXJyb3InLFxuICAgICAgICAgICAgdmFsaWRDbGFzczogJ2hhcy1zdWNjZXNzJyxcbiAgICAgICAgICAgIHNob3dFcnJvcnM6IGZ1bmN0aW9uIHNob3dFcnJvcnMoZXJyb3JNYXApIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3JNYXBbJ2F0dGFjaCddKSBOb3RpZnkodXBsb2FkRXJyb3JNZXNzYWdlLCBub3RpZnlEZWxheSk7XG4gICAgICAgICAgICAgICAgdGhpcy5kZWZhdWx0U2hvd0Vycm9ycygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhpZ2hsaWdodDogZnVuY3Rpb24gaGlnaGxpZ2h0KGVsZW0sIGVycm9yQ2xhc3MsIHZhbGlkQ2xhc3MpIHtcbiAgICAgICAgICAgICAgICAkKGVsZW0pLnBhcmVudCgpLmFkZENsYXNzKGVycm9yQ2xhc3MpLnJlbW92ZUNsYXNzKHZhbGlkQ2xhc3MpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVuaGlnaGxpZ2h0OiBmdW5jdGlvbiB1bmhpZ2hsaWdodChlbGVtLCBlcnJvckNsYXNzLCB2YWxpZENsYXNzKSB7XG4gICAgICAgICAgICAgICAgJChlbGVtKS5wYXJlbnQoKS5yZW1vdmVDbGFzcyhlcnJvckNsYXNzKS5hZGRDbGFzcyh2YWxpZENsYXNzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBydWxlczoge1xuICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG1heGxlbmd0aDogMjU1XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBsYXN0X25hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG1heGxlbmd0aDogMjU1XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwaG9uZToge1xuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbnVtYmVyOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBtYXhsZW5ndGg6IDI1NSxcbiAgICAgICAgICAgICAgICAgICAgbWlubGVuZ3RoOiA1XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjb21wYW55OiB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBtYXhsZW5ndGg6IDI1NVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG1heGxlbmd0aDogMjU1XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjb3VudHJ5OiB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzaXplOiB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlbWFpbDoge1xuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVwZW5kczogZnVuY3Rpb24gZGVwZW5kcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnZhbCgkLnRyaW0oJCh0aGlzKS52YWwoKSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBlbWFpbDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbWF4bGVuZ3RoOiAyNTVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWVzc2FnZXM6IGZhbHNlLFxuICAgICAgICAgICAgc3VibWl0SGFuZGxlcjogZnVuY3Rpb24gc3VibWl0SGFuZGxlcihmb3JtLCBldmVudCkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgdmFyIHJvd0RhdGEgPSBuZXcgRm9ybURhdGEoZm9ybSk7XG4gICAgICAgICAgICAgICAgdmFyIHVybCA9IGZvcm0uZ2V0QXR0cmlidXRlKCdkYXRhLXVybCcpO1xuICAgICAgICAgICAgICAgIHZhciBzdWNjZXNzTWVzc2FnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53ZWJpbmFyLWRpZ2l0YWwgLmNvbnRhY3QtZm9ybSAuc3VjY2Vzcy1tZXNzYWdlJyk7XG5cbiAgICAgICAgICAgICAgICB3aW5kb3cuaGFuZGxlRm9ybVN1Ym1pdCh1cmwsIHJvd0RhdGEsIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ0NvbnRhY3RGb3JtJ1xuICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuZGF0YUxheWVyLnB1c2goeyAnZXZlbnQnOiAnV2ViaW5hcldlYkZvcm1TdWJtaXQnIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybS5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NNZXNzYWdlLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYnV0dG9uTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2ViaW5hci1kaWdpdGFsIC5jb250YWN0LWZvcm0gZm9ybSAubWFpbi1idG4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtb2RhbFdpbmRvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC12aWRlbycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJ1dHRvbk1vZGFsICYmIG1vZGFsV2luZG93KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNsb3NlTW9kYWwgPSBmdW5jdGlvbiBjbG9zZU1vZGFsKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RhbFdpbmRvdy5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kYWxXaW5kb3cuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1vZGFsV2luZG93KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2aWRlb0lkID0gbW9kYWxXaW5kb3cuZGF0YXNldFsndmlkZW9pZCddO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaWZyYW1lID0gJzxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC12aWRlb19faWZyYW1lLWNvbnRhaW5lclwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpZnJhbWUgY2xhc3M9XCJtb2RhbC12aWRlb19faWZyYW1lXCIgc3JjPVwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvJyArIHZpZGVvSWQgKyAnL3JlbD0wJnNob3dpbmZvPTAmYXV0b3BsYXk9MCZsb29wPTAmZWdtPTAmc2hvd3NlYXJjaD0wJmNvbnRyb2xzPTAmaXZfbG9hZF9wb2xpY3k9M1wiIGZyYW1lYm9yZGVyPVwiMFwiIGFsbG93ZnVsbHNjcmVlbj48L2lmcmFtZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RhbFdpbmRvdy5pbm5lckhUTUwgPSBpZnJhbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGFsV2luZG93LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGFsV2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xvc2VNb2RhbCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZG9jdW1lbnQpLmtleXVwKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLmtleUNvZGUgPT09IDI3KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgdmFyIHBpbm5lZEZvcm0gPSBmdW5jdGlvbiBwaW5uZWRGb3JtKCkge1xuICAgICAgICB2YXIgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwaW5lZC1mb3JtJyk7XG4gICAgICAgIHZhciBtYWluSGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4taGVhZGVyJyk7XG4gICAgICAgIHZhciBtYWluQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWluLWNvbnRlbnQnKTtcbiAgICAgICAgdmFyIGZvcm1SZWN0ID0gZm9ybS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHZhciBtYWluSGVhZGVyUmVjdCA9IG1haW5IZWFkZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICB2YXIgbWFpbkNvbnRlbnRSZWN0ID0gbWFpbkNvbnRlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICBpZiAobWFpbkhlYWRlclJlY3QudG9wICsgNTAgPCAwICYmIG1haW5Db250ZW50UmVjdC5ib3R0b20gLSBmb3JtUmVjdC5oZWlnaHQgLSAxMzAgPiAwKSB7XG4gICAgICAgICAgICAgICAgZm9ybS5jbGFzc0xpc3QuYWRkKCdmaXhlZC1mb3JtJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGZvcm0uY2xhc3NMaXN0LnJlbW92ZSgnZml4ZWQtZm9ybScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1haW5IZWFkZXJSZWN0LnRvcCArIDUwICYmIG1haW5Db250ZW50UmVjdC5ib3R0b20gLSBmb3JtUmVjdC5oZWlnaHQgLSAxMzAgPCAwKSB7XG4gICAgICAgICAgICAgICAgZm9ybS5jbGFzc0xpc3QuYWRkKCdzdG9wLWZvcm0nKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZm9ybS5jbGFzc0xpc3QucmVtb3ZlKCdzdG9wLWZvcm0nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHBpbm5lZEZvcm0oKTtcblxuICAgIHZhciBhcHBlbmRDb3VudGllcyA9IGZ1bmN0aW9uIGFwcGVuZENvdW50aWVzKCkge1xuICAgICAgICB2YXIgY291bnRyeVNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb3VudHJpZXMnKTtcbiAgICAgICAgdmFyIGNvdW50cnlOb2RlcyA9IGNvdW50cmllcy5tYXAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gJzxvcHRpb24gdmFsdWU9JyArIHZhbHVlICsgJz4nICsgdmFsdWUgKyAnPC9vcHRpb24+JztcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY291bnRyeVNlbGVjdC5pbm5lckhUTUwgPSAnPG9wdGlvbiBkaXNhYmxlZCBzZWxlY3RlZD5Db3VudHJ5PC9vcHRpb24+JyArIGNvdW50cnlOb2Rlcy5qb2luKCcnKTtcbiAgICB9O1xuXG4gICAgdmFyIGNvdW50RG93biA9IGZ1bmN0aW9uIGNvdW50RG93bigpIHtcbiAgICAgICAgdmFyIGNvdW50RG93bkRhdGUgPSBuZXcgRGF0ZSgyMDE5LCA2LCAxOCwgMTEsIDAsIDApLmdldFRpbWUoKTtcblxuICAgICAgICB2YXIgeCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBub3cgPSBuZXcgRGF0ZSgpO1xuXG4gICAgICAgICAgICBub3cuc2V0VGltZShub3cuZ2V0VGltZSgpICsgbm93LmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MCAqIDEwMDAgLSA1ICogMzYwMCAqIDEwMDApO1xuXG4gICAgICAgICAgICB2YXIgZGlzdGFuY2UgPSBjb3VudERvd25EYXRlIC0gbm93LmdldFRpbWUoKTtcblxuICAgICAgICAgICAgdmFyIGRheXMgPSBNYXRoLmZsb29yKGRpc3RhbmNlIC8gKDEwMDAgKiA2MCAqIDYwICogMjQpKTtcbiAgICAgICAgICAgIHZhciBob3VycyA9IE1hdGguZmxvb3IoZGlzdGFuY2UgJSAoMTAwMCAqIDYwICogNjAgKiAyNCkgLyAoMTAwMCAqIDYwICogNjApKTtcbiAgICAgICAgICAgIHZhciBtaW51dGVzID0gTWF0aC5mbG9vcihkaXN0YW5jZSAlICgxMDAwICogNjAgKiA2MCkgLyAoMTAwMCAqIDYwKSk7XG4gICAgICAgICAgICB2YXIgc2Vjb25kcyA9IE1hdGguZmxvb3IoZGlzdGFuY2UgJSAoMTAwMCAqIDYwKSAvIDEwMDApO1xuICAgICAgICAgICAgaWYgKGRpc3RhbmNlIDwgMCkge1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoeCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb3VudGRvd24nKS5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cInRpbWVyLWJsb2NrXCI+JyArIGRheXMgKyAnPHNwYW4+ZGF5czwvc3Bhbj48L2Rpdj4gOlxcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGltZXItYmxvY2tcIj4nICsgaG91cnMgKyAnPHNwYW4+aG91cnM8L3NwYW4+PC9kaXY+IDpcXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpbWVyLWJsb2NrXCI+JyArIG1pbnV0ZXMgKyAnPHNwYW4+bWludXRlczwvc3Bhbj48L2Rpdj4gOlxcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGltZXItYmxvY2tcIj4nICsgc2Vjb25kcyArICc8c3Bhbj5zZWNvbmRzPC9zcGFuPjwvZGl2Pic7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIDEwMDApO1xuICAgIH07XG5cbiAgICBhcHBlbmRDb3VudGllcygpO1xuICAgIGNvdW50RG93bigpO1xufTsiXX0=
